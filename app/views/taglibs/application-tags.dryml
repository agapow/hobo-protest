<%#
Various tags for use throughout the application.
%>

<%#
An extended tag for showing gravatar images

While DRYML supplies a gravatar image out of the box, it doesn't allow for
several gravatar options. This local version allows the setting of alternative
images (an url to an image file or the name of a Gravatar default image) and
the setting of an image extension.

@param [url or string] altimg   url or name of image to use if no avatar found
@param [string] ext             extension of image type to return
@param [email] email_address    address to render avatar for

TODO: allow other gravatar options?
TODO: neater option merging (hash & join)?
NOTE: hobo bitched about "email_address" below until I changed it to "address".
%>
<def tag="ex-gravatar" attrs="size, rating, altimg, ext, address">
  <%
	 size ||= 80;
	 rating ||= 'g';
	 altimg ||= 'mm';
	 altimg = CGI::escape(altimg);
	 ext ||= '';
	 digest = Digest::MD5.hexdigest(address || this.email_address);
  -%>
  <a class="gravatar">
	 <img class="gravatar"
		src="http://www.gravatar.com/avatar/#{digest}#{ext}?s=#{size}&r=#{rating}&d=#{altimg}"
			merge-attrs/>
  </a>
</def>


<%#
A slightly modified version of Hobo's builtin live search.

basically we just get rid of the label and provide a ghost suggestion.
%>
<def tag="live-search">
	<div class="search">
		<input type="search" class="live-search" placeholder="search" />
		<spinner id="search-spinner" />
	</div>
	<section class="hidden" id="search-results-panel">
		<h2><ht key="hobo.live_search.results_label">Search Results</ht></h2>
		<div param="close-button">
			<ht key="hobo.live_search.close_button">close</ht>
		</div>
		<section id="search-results">&nbsp;</section>
	</section>
</def>


<def tag="form-field" attrs="name, type, value, title, options, help">
	<%
		# name must be provided
		# type is assumed to be 'text' unless otherwise said
		type ||= "text"
		# title is derived from the name if need be
		title ||= title || name.capitalize()
		# grab the value from the request if possible, otherwise default
		value = request.parameters[name] || value
		# formid from context
		formid = "test" #this.id
		# has helptext been provided?
		help ||= false
	%>
	<tr> 
		<th class="#{name}-label"> <%= title %></th> 
		<td class="#{name}-view">
			
			<if test="&type == 'text'">
				<input class="#{name}-tag #{type} #{formid}-#{name}"
					id="#{formid}_#{name}" name="#{name}" type="#{type}"
					value="#{value}" />
			</if>
			
			<if test="&type == 'boolean'">
				<%=
					# TODO: set id?
					checked = (value == '0')? false : true
					cb_tag = check_box_tag(name, '1', checked, attributes)
					cb_hidden_tag = hidden_field_tag(name, '0', :id => nil)
					HoboSupport::RAILS_AT_LEAST_23 ? cb_hidden_tag + cb_tag : cb_tag + cb_hidden_tag
				%>
			</if>
			
			<if test="&type == 'selectone'">
				<%
				# TODO: a way to set disabled choices and accept null answers?
				%>
				<select name="#{name}"
					class="#{name}-tag #{type} #{formid}-#{name}"
					id="#{formid}_#{name}">
				  <%= options_for_select(options, value.to_i) %>
				</select>
			</if>
			
			<if test="&type == 'file'">
				<input class="#{name}-tag #{type} #{formid}-#{name}"
					id="#{formid}_#{name}" name="#{name}" type="#{type}" />
			</if>
			
			<div if="&help" class="input-help"><% help %></div>
		</td> 
	</tr>
</def>


<def tag="bulk-upload-form" attrs="name, action, template">
	<if test="&current_user.administrator?">
		<%-
			# informal name for objects you're creating
			name ||= "records"
			# where to submit form to
			action ||= "."
			# do we have a template?
			template ||= "def.xlsx"

		%>
		<%= this_parent %>
		<div class="admins-only">
		<h3>Bulk upload</h3>
		<p class="description">
			Create multiple <%= name %> by uploading a spreadsheet in the correct
			format.
			<if test="&template">
				Download an example <a href="/downloads/#{template}">here</a>.
			</if>
		</p>
		
		<%
			attrs_hsh = {
				:action => action,
				:method => "post",
			}
			attrs_hsh[:enctype] = "multipart/form-data"			
		-%>
		<form merge-attrs="&attrs_hsh">
			<table class="field-list">
				<form-field type="file" name="spreadsheet"
					help="An Excel (.xls or .xls) file in the described format." />
				<form-field name="dryrun" title="Dry-run" type="boolean" value="0"
					help="Test the format of your file, but do not save data." />
				<form-field name="overwrite" title="Overwrite" type="boolean" value="0"
					help="Overwrite existing data. This will not destroy records but will change them." />
			</table>
			<br clear="all" />
			<div class="tool-buttons">
				<input type="submit" name="_submit" value="Upload" label="Upload"
					class="button submit-button"/>
			</div>
		</form>
				
				

		
		</div>
	</if>
</def>